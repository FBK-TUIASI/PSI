C51 COMPILER V9.59.0.0   TESTCAN                                                           11/14/2024 17:16:23 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TESTCAN
OBJECT MODULE PLACED IN .\BIG8051\Objects\TestCAN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TestCAN.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\BIG8051\Include) DEBUG
                    - OBJECTEXTEND PRINT(.\BIG8051\Listings\TestCAN.lst) TABS(3) OBJECT(.\BIG8051\Objects\TestCAN.obj)

line level    source

   1          //------------------------------------------------------------------------------------
   2          // NetCAN.c - aplicatie pentru microsistemul BIG8051 - Mikroelektronika
   3          //------------------------------------------------------------------------------------
   4          
   5          // se modifica CAN_Init() in fisierul can.c astfel incat CAN0CN = 0x41 in loc de 0xC1
   6          // si BITREG = 0x7CF1 (BRP = 1 in loc de 0)
   7          
   8          #include <c8051F040.h>     // declaratii SFR
   9           
  10          #include <wdt.h>
  11          #include <osc.h>
  12          #include <port.h>
  13          #include <timer.h>
  14          #include <uart0.h>
  15          #include <lcd.h>
  16          #include <keyboard.h>
  17          #include <can.h>
  18          
  19          extern CAN_Msg CAN_MsgTX, CAN_MsgRX;   // structuri de transmisie  si receptie mesaje CAN
  20          
  21          //************************************************************************************
  22          // Programul principal
  23          //************************************************************************************
  24          
  25          void BIG8051_Init(void){
  26   1      
  27   1         WDT_Disable();                   // dezactiveaza WDT
  28   1         SYSCLK_Init();                   // initializeaza si selecteaza oscilatorul ales in osc.h
  29   1         PORT_Init ();                    // conecteaza perifericele la pini si stabileste tipul pinilor
  30   1         LCD_Init();                      // 2 linii, display ON, cursor OFF, pozitia initiala (0,0)
  31   1         KEYB_Init();                     // initializeaza driver tastatura matriciala
  32   1         Timer0_Init();                   // initializeaza Timer 0 - intreruperi la 1 ms
  33   1         UART0_Init(EIGHT_BIT, 9600);     // initializeaza UART0 - conectare terminal la UART-USB
  34   1         CAN_Init();                      // initializeaza controlerul CAN, 1 Mbit/sec
  35   1         EA = 1;                          // validare globala intreruperi
  36   1      }
  37          
  38          //************************************************************************************
  39          // Programul principal
  40          //************************************************************************************
  41          void main (void) {
  42   1         unsigned char tasta;
  43   1      
  44   1         BIG8051_Init();                     // Initializare resurse HW & SW BIG8051
  45   1      
  46   1         CAN_Init_Object(1, CANID_STD, 0x001, 1, MSGOBJ_TX);    // MasgObj = 1, STD, CANID = 0, DLC = 1, TX
  47   1         CAN_Init_Object(2, CANID_STD, 0x000, 1, MSGOBJ_RX);    // MasgObj = 2, STD, CANID = 1, DLC = 1, RX
  48   1         
  49   1         while(1){
  50   2      
  51   2            if (tasta = KEYB_Input()){
  52   3               
  53   3               CAN_MsgTX.Date.Byte[0] = tasta;        // Pune in buffer octetul de transmis
  54   3               CAN_Transmit(1,0,&CAN_MsgTX);          // Transmite datele din buffer cu obiectul 1
C51 COMPILER V9.59.0.0   TESTCAN                                                           11/14/2024 17:16:23 PAGE 2   

  55   3         
  56   3               UART0_Putstr("\r\n\r\nTransmis: ");
  57   3               UART0_Putch(CAN_MsgTX.Date.Byte[0]);            // Afiseaza pe terminal octetul transmis
  58   3               LCD_PutStr(0,0, "Transmis: ");                  
  59   3               LCD_PutByte(LCD_line, LCD_col, CAN_MsgTX.Date.Byte[0]);     // Afiseaza pe LCD octetul transmis
  60   3            
  61   3            }
  62   2            if(CAN_MsgRX.NewDat){                           // S-au primit date noi?
  63   3               CAN_MsgRX.NewDat = 0;                           // daca da, sterge indicatorul date noi
  64   3               
  65   3               UART0_Putstr("\r\nPrimit: ");
  66   3               UART0_Putch(CAN_MsgRX.Date.Byte[0]);            // afiseaza pe terminal octetul primit
  67   3               LCD_PutStr(1,0, "Primit: ");                    
  68   3               LCD_PutByte(LCD_line, LCD_col, CAN_MsgRX.Date.Byte[0]);     // afiseaza pe LCD octetul primit
  69   3            }
  70   2         }
  71   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
