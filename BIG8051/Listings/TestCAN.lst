C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:54:05 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TESTCAN
OBJECT MODULE PLACED IN .\BIG8051\Objects\TestCAN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TestCAN.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\BIG8051\Include) DEBUG OBJEC
                    -TEXTEND PRINT(.\BIG8051\Listings\TestCAN.lst) TABS(3) OBJECT(.\BIG8051\Objects\TestCAN.obj)

line level    source

   1          //------------------------------------------------------------------------------------
   2          // NetCAN.c - aplicatie pentru microsistemul BIG8051 - Mikroelektronika
   3          //------------------------------------------------------------------------------------
   4          
   5          // se modifica CAN_Init() in fisierul can.c astfel incat CAN0CN = 0x41 in loc de 0xC1
   6          // si BITREG = 0x7CF1 (BRP = 1 in loc de 0)
   7          
   8          #include <c8051F040.h>     // declaratii SFR
   9           
  10          #include <wdt.h>
  11          #include <osc.h>
  12          #include <port.h>
  13          #include <timer.h>
  14          #include <uart0.h>
  15          #include <lcd.h>
  16          #include <keyboard.h>
  17          #include <can.h>
  18          #include <stdio.h>
  19          
  20          #define DSC    'A'
  21          #define WDI    'B'
  22          #define RDI    'C'
  23          #define CDI    'D'
  24          #define IOCI   '#'
  25          
  26          
  27          extern CAN_Msg CAN_MsgTX, CAN_MsgRX;   // structuri de transmisie  si receptie mesaje CAN
  28          
  29          sbit buz = P2^7;
  30          
  31          //************************************************************************************
  32          // INIT
  33          //************************************************************************************
  34          
  35          void BIG8051_Init(void){
  36   1      
  37   1         WDT_Disable();                   // dezactiveaza WDT
  38   1         SYSCLK_Init();                   // initializeaza si selecteaza oscilatorul ales in osc.h
  39   1         PORT_Init ();                    // conecteaza perifericele la pini si stabileste tipul pinilor
  40   1         LCD_Init();                      // 2 linii, display ON, cursor OFF, pozitia initiala (0,0)
  41   1         KEYB_Init();                     // initializeaza driver tastatura matriciala
  42   1         Timer0_Init();                   // initializeaza Timer 0 - intreruperi la 1 ms
  43   1         UART0_Init(EIGHT_BIT, 9600);     // initializeaza UART0 - conectare terminal la UART-USB
  44   1         CAN_Init();                      // initializeaza controlerul CAN, 1 Mbit/sec
  45   1         EA = 1;                          // validare globala intreruperi
  46   1      }
  47          
  48          //************************************************************************************
  49          // Print menu
  50          //************************************************************************************
  51          
  52          void print_menu(){
  53   1         UART0_Putstr("\r\n");
  54   1         UART0_Putstr("Please select option from menu:         \r\n");
C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:54:05 PAGE 2   

  55   1         UART0_Putstr("A. Diagnostic Session Control:\t\t0x10. \r\n");
  56   1         UART0_Putstr("B. Write Data by Identifier:      0x2E. \r\n");
  57   1         UART0_Putstr("C. Read Data by Identifier:       0x22. \r\n");
  58   1         UART0_Putstr("D. Clear Diagnostic Information:  0x14. \r\n");
  59   1         UART0_Putstr("#. I/O Control by Identifier:     0x2F. \r\n");
  60   1         UART0_Putstr("\r\n                                    \r\n");
  61   1      }
  62          
  63          void option(unsigned char opt){
  64   1         if(opt == DSC){
  65   2            UART0_Putstr("\t- Diagnostic Session Control:   0x10. \r\n");
  66   2            LCD_PutStr(0,0, "Trimis: 0x10");       // afiseaza pe LCD octetul trimis   
  67   2            CAN_MsgTX.Date.Byte[0] = 0x10;         // Pune in buffer octetul de transmis
  68   2         }  
  69   1         else if(opt == WDI){
  70   2            UART0_Putstr("\t- Write Data by Identifier:     0x2E. \r\n");
  71   2            LCD_PutStr(0,0, "Trimis: 0x2E");       // afiseaza pe LCD octetul trimis   
  72   2            CAN_MsgTX.Date.Byte[0] = 0x2E;         // Pune in buffer octetul de transmis
  73   2         }  
  74   1         else if(opt == RDI){
  75   2            UART0_Putstr("\t- Read Data by Identifier:      0x22. \r\n");
  76   2            LCD_PutStr(0,0, "Trimis: 0x22");       // afiseaza pe LCD octetul trimis   
  77   2            CAN_MsgTX.Date.Byte[0] = 0x22;         // Pune in buffer octetul de transmis
  78   2         }  
  79   1         else if(opt == CDI){
  80   2            UART0_Putstr("\t- Clear Diagnostic Information: 0x14. \r\n");
  81   2            LCD_PutStr(0,0, "Trimis: 0x14");       // afiseaza pe LCD octetul trimis   
  82   2            CAN_MsgTX.Date.Byte[0] = 0x14;         // Pune in buffer octetul de transmis
  83   2         }
  84   1         else if(opt == IOCI){
  85   2            UART0_Putstr("\t- I/O Control by Identifier:    0x2F. \r\n");
  86   2            LCD_PutStr(0,0, "Trimis: 0x2F");       // afiseaza pe LCD octetul trimis   
  87   2            CAN_MsgTX.Date.Byte[0] = 0x2F;         // Pune in buffer octetul de transmis
  88   2         }
  89   1         else{
  90   2            UART0_Putstr("\t- Invalid option. \r\n");
  91   2            LCD_PutStr(0,0, "Trimis: 0xFF");       // afiseaza pe LCD octetul trimis   
  92   2            CAN_MsgTX.Date.Byte[0] = 0xFF;         // Pune in buffer octetul de transmis
  93   2         }
  94   1      }
  95          
  96          void buzzer(int t, int f){
  97   1         int ms = 0;
  98   1         while((ms * 20) < (t / f)){
  99   2            buz = 1;
 100   2            Delay(f);
 101   2            buz = 0;
 102   2            Delay(10);
 103   2            ms++;
 104   2         }
 105   1      }
 106          
 107          //************************************************************************************
 108          // Do something
 109          //************************************************************************************
 110          
 111          
 112          
 113          //************************************************************************************
 114          // Programul principal
 115          //************************************************************************************
 116          void main (void) {
C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:54:05 PAGE 3   

 117   1         unsigned char tasta, counter = 0, iter = 0, buf[16], here = 0;
 118   1         unsigned int  tx = 0;
 119   1      
 120   1         BIG8051_Init();                     // Initializare resurse HW & SW BIG8051
 121   1      
 122   1         CAN_Init_Object(1, CANID_STD, 0x001, 1, MSGOBJ_TX);    // MasgObj = 1, STD, CANID = 0, DLC = 1, TX
 123   1         CAN_Init_Object(2, CANID_STD, 0x000, 1, MSGOBJ_RX);    // MasgObj = 2, STD, CANID = 1, DLC = 1, RX
 124   1         
 125   1         print_menu();
 126   1         while(1){
 127   2            if (tasta = KEYB_Input()){
 128   3               option(tasta);
 129   3               CAN_Transmit(1,0,&CAN_MsgTX); 
 130   3            }              
 131   2            if(CAN_MsgRX.NewDat){                           // S-au primit date noi?
 132   3               CAN_MsgRX.NewDat = 0;                           // daca da, sterge indicatorul date noi
 133   3               
 134   3               UART0_Putstr("\r\nRaspuns primit: ");
 135   3               if((CAN_MsgTX.Date.Byte[0]  + 0x40) == CAN_MsgRX.Date.Byte[0]){
 136   4                  UART0_PutByteHex(CAN_MsgRX.Date.Byte[0]);          // afiseaza pe terminal octetul primit
 137   4                  UART0_Putstr("\t- OK");
 138   4               }
 139   3               else{
 140   4                  UART0_PutByteHex(0x7F);          
 141   4                  UART0_PutByteHex(CAN_MsgRX.Date.Byte[0]); 
 142   4                  UART0_PutByteHex(0x11); 
 143   4                  UART0_Putstr("\t - NOK!");
 144   4                  buzzer(500, 2);
 145   4                  buzzer(500, 5);
 146   4                  buzzer(150, 3);
 147   4                  buzzer(1000, 5);
 148   4                  buzzer(100, 2);
 149   4                  buzzer(100, 5);
 150   4                  buzzer(200, 1);
 151   4                  buzzer(100, 10);
 152   4               }
 153   3               UART0_Putstr("\r\n\r\n ");
 154   3               
 155   3               LCD_PutStr(1,0, "Primit: ");                    
 156   3               LCD_PutByte(1, LCD_col, CAN_MsgRX.Date.Byte[0]);      // afiseaza pe LCD octetul primit
 157   3               
 158   3               Delay(1000);
 159   3               print_menu();
 160   3      
 161   3            }
 162   2         }
 163   1      }
*** WARNING C280 IN LINE 117 OF TestCAN.c: 'buf': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    638    ----
   CONSTANT SIZE    =    607    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
