C51 COMPILER V9.59.0.0   TESTCAN                                                           11/28/2024 17:43:42 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TESTCAN
OBJECT MODULE PLACED IN .\BIG8051\Objects\TestCAN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TestCAN.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\BIG8051\Include) DEBUG
                    - OBJECTEXTEND PRINT(.\BIG8051\Listings\TestCAN.lst) TABS(3) OBJECT(.\BIG8051\Objects\TestCAN.obj)

line level    source

   1          //------------------------------------------------------------------------------------
   2          // NetCAN.c - aplicatie pentru microsistemul BIG8051 - Mikroelektronika
   3          //------------------------------------------------------------------------------------
   4          
   5          // se modifica CAN_Init() in fisierul can.c astfel incat CAN0CN = 0x41 in loc de 0xC1
   6          // si BITREG = 0x7CF1 (BRP = 1 in loc de 0)
   7          
   8          #include <c8051F040.h>     // declaratii SFR
   9           
  10          #include <wdt.h>
  11          #include <osc.h>
  12          #include <port.h>
  13          #include <timer.h>
  14          #include <uart0.h>
  15          #include <lcd.h>
  16          #include <keyboard.h>
  17          #include <can.h>
  18          #include <stdio.h>
  19          
  20          extern CAN_Msg CAN_MsgTX, CAN_MsgRX;   // structuri de transmisie  si receptie mesaje CAN
  21          
  22          //************************************************************************************
  23          // Programul principal
  24          //************************************************************************************
  25          
  26          void BIG8051_Init(void){
  27   1      
  28   1         WDT_Disable();                   // dezactiveaza WDT
  29   1         SYSCLK_Init();                   // initializeaza si selecteaza oscilatorul ales in osc.h
  30   1         PORT_Init ();                    // conecteaza perifericele la pini si stabileste tipul pinilor
  31   1         LCD_Init();                      // 2 linii, display ON, cursor OFF, pozitia initiala (0,0)
  32   1         KEYB_Init();                     // initializeaza driver tastatura matriciala
  33   1         Timer0_Init();                   // initializeaza Timer 0 - intreruperi la 1 ms
  34   1         UART0_Init(EIGHT_BIT, 9600);     // initializeaza UART0 - conectare terminal la UART-USB
  35   1         CAN_Init();                      // initializeaza controlerul CAN, 1 Mbit/sec
  36   1         EA = 1;                          // validare globala intreruperi
  37   1      }
  38          
  39          //************************************************************************************
  40          // Programul principal
  41          //************************************************************************************
  42          void main (void) {
  43   1         unsigned char tasta, counter = 0, iter = 0, buf[16];
  44   1         unsigned int  tx = 0;
  45   1      
  46   1         BIG8051_Init();                     // Initializare resurse HW & SW BIG8051
  47   1      
  48   1         CAN_Init_Object(1, CANID_STD, 0x001, 1, MSGOBJ_TX);    // MasgObj = 1, STD, CANID = 0, DLC = 1, TX
  49   1         CAN_Init_Object(2, CANID_STD, 0x000, 1, MSGOBJ_RX);    // MasgObj = 2, STD, CANID = 1, DLC = 1, RX
  50   1         
  51   1         while(1){
  52   2      
  53   2            if (tasta = KEYB_Input()){
  54   3               
C51 COMPILER V9.59.0.0   TESTCAN                                                           11/28/2024 17:43:42 PAGE 2   

  55   3      //       if('0' < tasta < '9')
  56   3      //          tasta -= '0';
  57   3      //       else if('A' < tasta < 'D')
  58   3      //          tasta -= 'A';
  59   3      //       else if(tasta == '*')
  60   3      //          tasta = 'E';
  61   3      //       else if(tasta == '#')
  62   3      //          tasta = 'F';   
  63   3               
  64   3               CAN_MsgTX.Date.Byte[counter] = tasta;        // Pune in buffer octetul de transmis
  65   3               counter++;
  66   3               if (counter >= 8) {
  67   4                  tx++;          
  68   4                  counter = 0;
  69   4                  CAN_Transmit(1,0,&CAN_MsgTX);          // Transmite datele din buffer cu obiectul 1
  70   4                  sprintf(buf, "\r\n\r\nTransmis[%d]: %s", tx,CAN_MsgTX.Date.Byte);
  71   4                  UART0_Putstr(buf);
  72   4                  sprintf(buf, "Tx[%d]: %s", tx,CAN_MsgTX.Date.Byte);
  73   4                  LCD_PutStr(0,0, buf);                  
  74   4      
  75   4      //          for(iter = 0; iter > 8; iter++){
  76   4      //             UART0_PutByteHex(CAN_MsgTX.Date.Byte[iter]);          // Afiseaza pe terminal octetul transmis
  77   4      //             LCD_PutByteHex(0, 5 + iter, CAN_MsgTX.Date.Byte[iter]);     // Afiseaza pe LCD octetul transmis
  78   4      //          }
  79   4               }
  80   3            }
  81   2            if(CAN_MsgRX.NewDat){                           // S-au primit date noi?
  82   3               CAN_MsgRX.NewDat = 0;                           // daca da, sterge indicatorul date noi
  83   3               
  84   3               UART0_Putstr("\r\nPrimit: ");
  85   3               UART0_Putch(CAN_MsgRX.Date.Byte[0]);            // afiseaza pe terminal octetul primit
  86   3               LCD_PutStr(1,0, "Primit: ");                    
  87   3               LCD_PutByte(1, LCD_col, CAN_MsgRX.Date.Byte[0]);      // afiseaza pe LCD octetul primit
  88   3            }
  89   2         }
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    442    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =     21    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
