C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:52:25 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TESTCAN
OBJECT MODULE PLACED IN .\BIG8051\Objects\TestCAN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TestCAN.c LARGE OPTIMIZE(1,SPEED) BROWSE INCDIR(.\BIG8051\Include) DEBUG
                    - OBJECTEXTEND PRINT(.\BIG8051\Listings\TestCAN.lst) OBJECT(.\BIG8051\Objects\TestCAN.obj)

line level    source

   1          //------------------------------------------------------------------------------------
   2          // NetCAN.c - aplicatie pentru microsistemul BIG8051 - Mikroelektronika
   3          //------------------------------------------------------------------------------------
   4          
   5          // se modifica CAN_Init() in fisierul can.c astfel incat CAN0CN = 0x41 in loc de 0xC1
   6          // si BITREG = 0x7CF1 (BRP = 1 in loc de 0)
   7          
   8          #include <stdio.h>
   9          #include <c8051F040.h>          // declaratii SFR
  10           
  11          #include <wdt.h>
  12          #include <osc.h>
  13          #include <port.h>
  14          #include <timer.h>
  15          #include <uart0.h>
  16          #include <lcd.h>
  17          #include <keyboard.h>
  18          #include <can.h>
  19          
  20          sbit led0 = P2 ^ 0;
  21          sbit buzz = P2 ^ 7;
  22          
  23          
  24          
  25          extern CAN_Msg CAN_MsgTX, CAN_MsgRX;    // structuri de transmisie  si receptie mesaje CAN
  26          
  27          //************************************************************************************
  28          // Programul principal
  29          //************************************************************************************
  30          
  31          void BIG8051_Init(void){
  32   1      
  33   1              WDT_Disable();                                                  // dezactiveaza WDT
  34   1         SYSCLK_Init();                                                       // initializeaza si selecteaza oscilatorul ales in osc.h
  35   1         PORT_Init ();                                                        // conecteaza perifericele la pini si stabileste tipul pinilor
  36   1              LCD_Init();                                             // 2 linii, display ON, cursor OFF, pozitia initiala (0,0)
  37   1              KEYB_Init();                                                    // initializeaza driver tastatura matriciala
  38   1              Timer0_Init();                                                  // initializeaza Timer 0 - intreruperi la 1 ms
  39   1              UART0_Init(EIGHT_BIT, 9600);            // initializeaza UART0 - conectare terminal la UART-USB
  40   1              CAN_Init();                                                             // initializeaza controlerul CAN, 1 Mbit/sec
  41   1              EA = 1;                                                                 // validare globala intreruperi
  42   1      }
  43          
  44          void buzzer(t){
  45   1          int ms = 0;
  46   1          while(ms < t/2)
  47   1          {
  48   2              buzz = 1;
  49   2              Delay(1);
  50   2              buzz = 0;
  51   2              Delay(1);
  52   2              ms++;
  53   2          }
  54   1      }
C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:52:25 PAGE 2   

  55          
  56          //************************************************************************************
  57          // Programul principal
  58          //************************************************************************************
  59          void main (void) {
  60   1              unsigned char tasta;
  61   1          unsigned char text[20];
  62   1          unsigned int ServicesList[5] = {0x10, 0x2E, 0x22, 0x2F, 0x14};
  63   1          unsigned char Negative_Response[8];
  64   1          int i;
  65   1          int Service_Flag = 0;
  66   1          led0 = 0;
  67   1              BIG8051_Init();                                                 // Initializare resurse HW & SW BIG8051
  68   1      
  69   1              CAN_Init_Object(1, CANID_STD, 0x000, 1, MSGOBJ_TX);      // MasgObj = 1, STD, CANID = 0, DLC = 1, TX
  70   1              CAN_Init_Object(2, CANID_STD, 0x001, 1, MSGOBJ_RX);      // MasgObj = 2, STD, CANID = 1, DLC = 1, RX
  71   1              
  72   1        
  73   1              while(1){
  74   2      
  75   2      
  76   2                      if (tasta = KEYB_Input()){
  77   3                              
  78   3                              CAN_MsgTX.Date.Byte[0] = tasta;                 // Pune in buffer octetul de transmis
  79   3                              CAN_Transmit(1,0,&CAN_MsgTX);                           // Transmite datele din buffer cu obiectul 1
  80   3              
  81   3                              UART0_Putstr("\r\n\r\nTransmis: ");
  82   3                              UART0_Putch(CAN_MsgTX.Date.Byte[0]);                            // Afiseaza pe terminal octetul transmis
  83   3                              LCD_PutStr(0,0, "Transmis: ");                                          
  84   3                              LCD_PutByte(LCD_line, LCD_col, CAN_MsgTX.Date.Byte[0]);                 // Afiseaza pe LCD octetul transmis
  85   3                      
  86   3                      }
  87   2                      if(CAN_MsgRX.NewDat){                                                                   // S-au primit date noi?
  88   3                              CAN_MsgRX.NewDat = 0;                                                                   // daca da, sterge indicatorul date noi
  89   3                              for (i = 0; i < 5; i++)
  90   3                  {
  91   4      //                LCD_PutByte(1, 0, (unsigned int)CAN_MsgRX.Date.Byte[0]);                                              
  92   4      //                LCD_PutByte(1, 5, ServicesList[i]);
  93   4      //                
  94   4                      if((unsigned int)CAN_MsgRX.Date.Byte[0] == ServicesList[i])
  95   4                          Service_Flag = 1;
  96   4                      
  97   4                  }
  98   3                  if(Service_Flag == 1)
  99   3                      {
 100   4                          Service_Flag = 0;
 101   4                          //sprintf(text, " :: %04x", CAN_MsgRX.Date.Byte[0]);
 102   4                          UART0_Putstr("\r\nPrimit: ");
 103   4                          //UART0_Putstr(text);                               // afiseaza pe terminal octetul primit  
 104   4                          UART0_PutByteHex(CAN_MsgRX.Date.Byte[0]);
 105   4                          CAN_MsgTX.Date.Byte[0] = (CAN_MsgRX.Date.Byte[0] + 0x40);
 106   4                          CAN_Transmit(1,0,&CAN_MsgTX);
 107   4                          if((unsigned int)CAN_MsgRX.Date.Byte[0] == 0x10)
 108   4                          {
 109   5                              LCD_PutStr(0, 0, "Request");
 110   5                              LCD_PutStr(1, 0, "Service 10     ");
 111   5                              buzzer(2000);
 112   5                          }
 113   4                          else if((unsigned int)CAN_MsgRX.Date.Byte[0] == 0x2E)
 114   4                          {
 115   5                              LCD_PutStr(0, 0, "Request");
 116   5                              LCD_PutStr(1, 0, "Service 2E     ");
C51 COMPILER V9.59.0.0   TESTCAN                                                           01/09/2025 17:52:25 PAGE 3   

 117   5                              led0 = 1;
 118   5                          }else if((unsigned int)CAN_MsgRX.Date.Byte[0] == 0x22)
 119   4                          {
 120   5                              LCD_PutStr(0, 0, "Request");
 121   5                              LCD_PutStr(1, 0, "Service 22     ");
 122   5                              led0 = 0;
 123   5                              
 124   5                          }else if((unsigned int)CAN_MsgRX.Date.Byte[0] == 0x2F)
 125   4                          {
 126   5                              LCD_PutStr(0, 0, "Request");
 127   5                              LCD_PutStr(1, 0, "Service 2F     ");
 128   5                              
 129   5                          }else if((unsigned int)CAN_MsgRX.Date.Byte[0] == 0x14)
 130   4                          {
 131   5                              LCD_PutStr(0, 0, "Request");
 132   5                              LCD_PutStr(1, 0, "Service 14     ");
 133   5                          }
 134   4                          
 135   4                      }else                    
 136   3                      {
 137   4                          LCD_PutStr(0, 0, "Request");
 138   4                          LCD_PutStr(1, 0, "Not implemented");
 139   4                          UART0_Putstr("\r\nPrimit: ");
 140   4                          Negative_Response[0] = 0x7F;
 141   4                          Negative_Response[1] = (unsigned int)CAN_MsgRX.Date.Byte[0];
 142   4                          Negative_Response[2] = 0x11;
 143   4                          UART0_PutByteHex(Negative_Response[1]);                             // afiseaza pe terminal octetul primit
 144   4                          CAN_MsgTX.Date.Byte[0] = (Negative_Response[1]);
 145   4                          
 146   4                          CAN_Transmit(1,0,&CAN_MsgTX);
 147   4                          
 148   4         
 149   4                      }
 150   3                      }
 151   2              }
 152   1          
 153   1          
 154   1      }
*** WARNING C280 IN LINE 61 OF TestCAN.c: 'text': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    813    ----
   CONSTANT SIZE    =    151    ----
   XDATA SIZE       =     47    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
